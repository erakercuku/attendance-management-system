employee_id,date,check_in_time,check_out_time,status
#include <iostream>
#include <fstream>
#include <string>
#include <regex>

using namespace std;

// Function to determine attendance status
string determineStatus(const string& checkIn, const string& checkOut) {
    if (checkIn.empty() || checkOut.empty()) return "Absent";
    if (checkIn > "09:15" && checkOut < "16:45") return "Partial";
    if (checkIn > "09:15") return "Late";
    if (checkOut < "16:45") return "Left Early";
    return "Present";
}

// Check if time is valid HH:MM format and doesn't contain double colons
bool isValidTimeFormat(const string& time) {
    if (time.empty()) return true; // blank is allowed
    if (time.find("::") != string::npos) return false; // reject if :: is found
    regex pattern("^\\d{2}:\\d{2}$"); // must be HH:MM
    return regex_match(time, pattern);
}

// Function to record the attendance in CSV file
void recordAttendance() {
    string employeeId, date, checkIn, checkOut;

    cout << "\n Attendance Entry:\n";
    cout << "Enter Employee ID: ";
    getline(cin, employeeId);

    cout << "Enter Date (YYYY-MM-DD): ";
    getline(cin, date);

    cout << "Enter Check-In Time (HH:MM) or leave blank if absent: ";
    getline(cin, checkIn);

    cout << "Enter Check-Out Time (HH:MM) or leave blank if absent: ";
    getline(cin, checkOut);

    // Required field check
    if (employeeId.empty() || date.empty()) {
        cerr << "Employee ID and Date are required.\n";
        return;
    }

    // Time format validation
    if (!isValidTimeFormat(checkIn) || !isValidTimeFormat(checkOut)) {
        cerr << "Invalid time format. Use HH:MM (e.g., 09:00) or leave blank.\n";
        return;
    }

    string status = determineStatus(checkIn, checkOut);

    ofstream file("data/attendance.csv", ios::app);
    if (file.is_open()) {
        file << employeeId << "," << date << "," << checkIn << "," << checkOut << "," << status << "\n";
        file.close();
        cout << "Attendance recorded successfully.\n";
    } else {
        cerr << "Failed to open data/attendance.csv\n";
    }
}
